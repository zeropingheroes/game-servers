#!/bin/bash

# Abort script on first error
set -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

source $DIR/globals

GAME=${2%/}
COMMAND=${1,,}

# Functions

function install_game {
    GAME=${1%/}
    if [ -f $DIR/$GAME/install.sh ]; then
        info "Installing $GAME server"
        source $DIR/$GAME/install.sh
    else
        error "Installer for game server '$GAME' not found"
    fi
}

function update_game {
    GAME=${1%/}
    if [ -f $DIR/$GAME/update.sh ]; then
        info "Updating $GAME server"
        source $DIR/$GAME/update.sh
    else
        error "Updater for game server '$GAME' not found"
    fi
}

function launch {
	if [ ! -d "$2/logs" ]; then
		mkdir -p "$2/logs"
	fi
        tmux new-session -d -s "$2-$3" "$1" 2> "$2/logs/$2-$3-tmux-error.log"
}

function console {
        tmux attach-session -t "$1-$2"
}

function stop {
	tmux send-keys "^c" -t "$1-$2"
}

function server_running {
	if (tmux has-session -t "$1" 2> /dev/null); then
		return 0 # session exists
	else
		return 1
	fi
}

function list_servers {
	info "Currently running servers:"
	tmux list-sessions
	exit
}

function steam_username_configured {
	if [[ ! -z "${STEAM_USERNAME// }" ]]; then
		return 0 # steam username configured
	else
		return 1
	fi
}

if [ $# == 0 ]; then
	echo "
Usage:

  game-servers self-install
  game-servers self-update

  game-servers install <game1> [<game2>...]
  game-servers install all

  game-servers update <game1> [<game2>...]
  game-servers update all

  game-servers launch <game> [<launcher>]
  game-servers console <game> [<launcher>]
  game-servers stop <game> [<launcher>]

  game-servers status
"
    exit
fi

if [ ! steam_username_configured ]; then
    error "No Setam username configured in 'game-servers/linux/global'"
    exit
fi

case $COMMAND in
    "self-install")
	info "Downloading SteamCMD"
	$DIR/SteamCMD/download.sh

	if [ ! steam_username_configured ]; then
		info "Please specify a Steam account which owns the games you wish to host"
		info "Username:"
		read STEAM_USERNAME
		info "Adding Steam username to game-servers/linux/globals"
		sed -i "s/STEAM_USERNAME=\"\"/STEAM_USERNAME=\"$STEAM_USERNAME\"/g" $DIR/globals
	fi

	info "Starting SteamCMD"
	$DIR/SteamCMD/steamcmd.sh +login $STEAM_USERNAME +quit

	info "Installation complete!"
	;;

    "self-update")
	error "Not yet implemented"
	;;

    "install")

	# Argument is a single game
	if [ $# == 2 ] && [ $2 != "all" ]; then
	    install_game $2

	# Argument is "all"
	elif [ $# == 2 ] && [ "$2" == "all" ]; then
	    info "Installing all games"
	    for DIRECTORY in */ ; do
		if [ "$DIRECTORY" != "SteamCMD" ]; then
                    install_game $DIRECTORY
                fi
	    done

	# Argument is a list of games
	elif [ $# -gt 2 ]; then
	    for GAME in "$@"; do
		if [ "$GAME" != "install" ]; then
	            install_game $GAME
		fi
	    done
	fi
        ;;

    "update")
       # Argument is a single game
        if [ $# == 2 ] && [ $2 != "all" ]; then
            update_game $2

        # Argument is "all"
        elif [ $# == 2 ] && [ "$2" == "all" ]; then
            info "Updating all games"
            for DIRECTORY in */ ; do
                if [ "$DIRECTORY" != "SteamCMD" ]; then
                    update_game $DIRECTORY
                fi
            done

        # Argument is a list of games
        elif [ $# -gt 2 ]; then
            for GAME in "$@"; do
                if [ "$GAME" != "update" ]; then
                    update_game $GAME
                fi
            done
        fi
        ;;

    "launch")
	GAME=${2%/}
	LAUNCHER=${3:-default}
        if [ -f $DIR/$GAME/launchers/$LAUNCHER.sh ]; then
		if (server_running "$GAME-$LAUNCHER"); then
	            error "Server $GAME-$LAUNCHER already running"
		    exit
		else
	            info "Launching $GAME server with \"$LAUNCHER\" launcher"
                    launch "$DIR/$GAME/launchers/$LAUNCHER.sh" "$GAME" "$LAUNCHER"
		fi
        else
            error "Launcher \"$LAUNCHER\" for $GAME not found"
            exit
        fi
        ;;

    "console")
        GAME=${2%/}
	LAUNCHER=${3:-default}
	if ( server_running "$GAME-$LAUNCHER"); then
	        info "Opening console for $GAME ($LAUNCHER) server"
		info "Press ctrl+b and then d to exit the console but leave the server running"
		info "If you press ctrl+c the server will stop!"
		info "Please wait..."
		sleep 2
        	console "$GAME" "$LAUNCHER"
	else
		error "Server $GAME-$LAUNCHER not running"
		exit
	fi
	;;

    "stop")
        GAME=${2%/}
	LAUNCHER=${3:-default}
	if ( server_running "$GAME-$LAUNCHER"); then
		info "Stopping $GAME ($LAUNCHER) server"
		stop "$GAME" "$LAUNCHER"
	else
		error "Server $GAME-$LAUNCHER not running"
		exit
	fi
	;;

    "status")
	list_servers
	exit
	;;

    *)
        error "Unknown command: $COMMAND"
	exit
        ;;
esac

